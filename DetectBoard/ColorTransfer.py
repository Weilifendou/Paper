def rgb2lab(rgb):
    r = rgb[0]
    g = rgb[1]
    b = rgb[2]
    # 映射RGB值到0-1范围
    r = rgb[0] / 255.0
    g = rgb[1] / 255.0
    b = rgb[2] / 255.0

    # 逆gamma校正
    r = r**2.2 if r > 0.04045 else r / 12.92
    g = g**2.2 if g > 0.04045 else g / 12.92
    b = b**2.2 if b > 0.04045 else b / 12.92

    # 转换为XYZ颜色空间
    x = (r * 0.4124564 + g * 0.3575761 + b * 0.1804375) / 0.95047
    y = (r * 0.2126729 + g * 0.7151522 + b * 0.0721750) / 1.00000
    z = (r * 0.0193339 + g * 0.1191920 + b * 0.9503041) / 1.08883

    # XYZ转换为Lab颜色空间
    x = x**(1/3) if x > 0.008856 else (903.3 * x + 16) / 116
    y = y**(1/3) if y > 0.008856 else (903.3 * y + 16) / 116
    z = z**(1/3) if z > 0.008856 else (903.3 * z + 16) / 116

    l = (116 * y) - 16
    a = (x - y) * 500
    b = (y - z) * 200

    return l, a, b


def lab2rgb(lab):
    # 将Lab颜色值分解
    l = lab[0]
    a = lab[1]
    b = lab[2]

    # 将Lab转换为XYZ颜色空间
    y = (l + 16) / 116
    x = a / 500 + y
    z = y - b / 200

    x = x**3 if x**3 > 0.008856 else (x - 16 / 116) / 7.787
    y = y**3 if y**3 > 0.008856 else (y - 16 / 116) / 7.787
    z = z**3 if z**3 > 0.008856 else (z - 16 / 116) / 7.787

    x *= 0.95047
    y *= 1.00000
    z *= 1.08883

    # XYZ转换为RGB颜色空间
    r = x * 3.2406 + y * -1.5372 + z * -0.4986
    g = x * -0.9689 + y * 1.8758 + z * 0.0415
    b = x * 0.0557 + y * -0.2040 + z * 1.0570

    # 逆gamma校正
    r = 1.055 * r**(1/2.4) - 0.055 if r > 0.0031308 else 12.92 * r
    g = 1.055 * g**(1/2.4) - 0.055 if g > 0.0031308 else 12.92 * g
    b = 1.055 * b**(1/2.4) - 0.055 if b > 0.0031308 else 12.92 * b

    # 将RGB值映射到0-255范围
    r = int(max(0, min(255, r * 255)))
    g = int(max(0, min(255, g * 255)))
    b = int(max(0, min(255, b * 255)))

    return r, g, b